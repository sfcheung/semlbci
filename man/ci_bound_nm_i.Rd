% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci_bound_nm_i.R
\name{ci_bound_nm_i}
\alias{ci_bound_nm_i}
\title{Find the lower or upper bound for one parameter by
the Neale-Miller-1997 approach}
\usage{
ci_bound_nm_i(
  i = NULL,
  npar = NULL,
  sem_out = NULL,
  f_constr = NULL,
  which = NULL,
  history = FALSE,
  perturbation_factor = 0.9,
  lb_var = -Inf,
  wald_ci_start = TRUE,
  standardized = FALSE,
  opts = list(),
  test_generic = TRUE,
  ciperc = 0.95,
  ci_limit_ratio_tol = 1.5,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{i}{The position of the target parameters as in the parameter table of
lavaan as generated by \code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.}

\item{npar}{The number of free parameters, including those constrained to be
equal.}

\item{sem_out}{The fit object. Currently supports an \code{\link[lavaan:lavaan]{lavaan::lavaan()}}
output only.}

\item{f_constr}{The constraint function generated by \code{\link[=set_constraint_nm]{set_constraint_nm()}}.
This argument is no longer used because the constraint
function will be
generated internally.}

\item{which}{Whether the lower bound or the upper bound is to be found. Must
be \code{"lbound"} or \code{"ubound"}.}

\item{history}{If \code{TRUE}, return the full optimization output as an
attribute. Default is \code{FALSE}.}

\item{perturbation_factor}{A number multiplied to the parameter
estimates in \code{sem_out}.
Using the parameter estimates as starting
values may lead to errors
in the first few iterations. Default is .90.
This argument is ignored is \code{wald_ci_start}
is `TRUE.}

\item{lb_var}{The lower bound for free parameters that are variances.
Default is \code{-Inf}. This is not an admissible
value but seems to be necessary when we need to find
the LBCI bound for a user-defined parameter.}

\item{wald_ci_start}{If \code{TRUE} and there are no equality constraints in
the model, Wald confidence limit will
be used as the starting value for the target parameter
if it is not a userd-defined paramter.}

\item{standardized}{If \code{TRUE}, the LBCI is for the requested estimate in the
standardized solution. Default is \code{FALSE}.}

\item{opts}{Options to be passed to \code{\link[nloptr:nloptr]{nloptr::nloptr()}}. Default is \code{list()}}

\item{test_generic}{If \code{TRUE}, will use the generic functions that are
used for free parameters, user defined parameters, and
standardized solution. The generic functions are now
the only options.
Therefore, this argument will be ignored.}

\item{ciperc}{The proportion of coverage for the confidence interval. Default
is .95.}

\item{ci_limit_ratio_tol}{The tolerance for the ratio of \code{a} to \code{b},
where \code{a} is
the distance between an LBCI limit and the
point estimate, and the \code{b} is the distance between the
original confidence limit (by default the Wald CI in
\code{\link[lavaan:lavaan]{lavaan::lavaan()}})
and the point estimate. If the ratio is larger than this value,
a warning is set in the status code.
Default is 1.5.}

\item{verbose}{If \code{TRUE}, the function will store more diagnostic information
in the attribute \code{diag}.
Default is \code{FALSE}.}

\item{...}{Optional arguments. Not used.}
}
\value{
The requested bound.

The attribute \code{diag} contains basic information in the optimization process.
If \code{verbose} is \code{TRUE}, more information will be stored in this attribute.
}
\description{
Find the lower or upper bound of the
likelihood-based
confidence interval (LBCI) for one parameter
by the Neale-Miller-1997 approach.
}
\details{
\subsection{NOTE}{

This function is not supposed to be used directly by users. It is
exported such that interested users can examine how a confidence bound is
found.
}

\subsection{Algorithm}{

This function currently supports \code{\link[lavaan:lavaan]{lavaan::lavaan()}} outputs only. This
function implements
a version of the algorithm presented in Neale and Miller (1997) that
use an equality constraint (see Pritikin, Rappaport, & Miller, 2017).
}

\subsection{Limitation(s)}{

This function not yet implements the method
for an estimate close to an attainable bound (see Pritikin,
Rappaport, & Miller, 2017).
}
}
\examples{
data(simple_med)
dat <- simple_med
mod <-
"
m ~ x
y ~ m
"
fit_med <- lavaan::sem(mod, simple_med, fixed.x = FALSE)

out1l <- ci_bound_nm_i(1, 5, sem_out = fit_med, which = "lbound")
out1l

}
\references{
Neale, M. C., & Miller, M. B. (1997). The use of likelihood-based confidence
intervals in genetic models. \emph{Behavior Genetics, 27}(2), 113–120.
\url{https://doi.org/10.1023/A:1025681223921}

Pritikin, J. N., Rappaport, L. M., & Neale, M. C. (2017). Likelihood-based
confidence intervals for a parameter with an upper or lower bound.
\emph{Structural Equation Modeling: A Multidisciplinary Journal, 24}(3), 395–401.
\url{https://doi.org/10.1080/10705511.2016.1275969}
}
