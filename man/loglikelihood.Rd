% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglike_at.R
\name{loglike_range}
\alias{loglike_range}
\alias{loglike_point}
\alias{loglike_quad_range}
\alias{loglike_quad_point}
\alias{loglike_compare}
\alias{loglikelihood}
\title{Loglikelihood When a Parameter ss Fixed to Values in a Range}
\usage{
loglike_range(
  sem_out,
  par_i,
  confidence = 0.95,
  n_points = 20,
  interval = NULL,
  verbose = FALSE
)

loglike_point(theta0, sem_out, par_i, verbose = FALSE)

loglike_quad_range(
  sem_out,
  par_i,
  confidence = 0.95,
  n_points = 20,
  interval = NULL
)

loglike_quad_point(theta0, sem_out, par_i)

loglike_compare(sem_out, par_i, confidence = 0.95, n_points = 20)
}
\arguments{
\item{sem_out}{The SEM output. Currently \code{lavaan} output only.}

\item{par_i}{The row number of the parameter in the output of
\code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.}

\item{confidence}{The level of confidence of the Wald confidence
interval. If \code{interval} is \code{NULL}, this confidence
is used as the interval.}

\item{n_points}{The number of points to be evaluated in the interval.}

\item{interval}{A vector of numbers. If provided and has two elements, this
will be used
as the end points of the interval. If it has more than
two elements, the elements will be used directly to form
the range of values in the interval.
Default is \code{NULL}.}

\item{verbose}{Whether some diagnostic information will be printed.
Default is \code{FALSE}.}

\item{theta0}{The value at which the parameter is fixed to.}
}
\value{
...
}
\description{
...
}
\details{
...
}
\section{Functions}{
\itemize{
\item \code{loglike_range}: Description of this function

\item \code{loglike_point}: Description of this function

\item \code{loglike_quad_range}: Description of this function

\item \code{loglike_quad_point}: Description of this function

\item \code{loglike_compare}: Description of this function
}}

\examples{

library(lavaan)
data(simple_med)
mod <-
"
m ~ a*x
y ~ b*m
ab:= a*b
asq:= a^2
"
fit_med <- sem(mod, simple_med, fixed.x = FALSE)
p_table <- parameterTable(fit_med)

pars <- c("m ~ x",
          "y ~ m",
          "asq := 1",
          "ab  := 2",
          "not in table")
out <- syntax_to_i(pars, fit_med)
out
p_table[out, ]
}
