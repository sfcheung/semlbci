% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_std.R
\name{get_std}
\alias{get_std}
\title{Standardized Estimate Function}
\usage{
get_std(fit_str, i, std_method = "lavaan")
}
\arguments{
\item{fit_str}{A one-element character vector. The name of the fit object.}

\item{i}{The position of the parameter in the parameter table.}

\item{std_method}{The method used to find the standardized solution.
If equal to \verb{"lavaan"``, [lavaan::standardizedSolution()] will be used. If equal to }"internal"\verb{, an internal function of this package will be used. The }"lavaan"\verb{method should work in all situations, but the}"internal"\verb{method can be faster. Default is}"lavaan"\verb{for now, but may be changed to}"internal"` if it is confirmed to work in all situations tested. Note that
if the internal method failed, the \code{\link[=get_std]{get_std()}} will fall back to the
lavaan method.}
}
\value{
The standardized estimate of the \emph{i} parameter.
}
\description{
This function is to be used to define user-defined
parameters in \code{lavaan}. Exported to be used by \code{\link[=ci_i]{ci_i()}} to find
the scaling factor for robust LBCI. Not to be used by normal
users.
}
\examples{
data(simple_med)

library(lavaan)
mod <-
"
m ~ x
y ~ m
"
fit_med <- lavaan::sem(mod, simple_med, fixed.x = FALSE)
standardizedSolution(fit_med)[1, ]
fit_med2 <- update(fit_med, add = "mx_std := semlbci::get_std('fit_med', 1)")
parameterEstimates(fit_med2)[6, ]

}
