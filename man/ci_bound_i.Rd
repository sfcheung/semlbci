% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci_bound_i.R
\name{ci_bound_i}
\alias{ci_bound_i}
\title{Find the lower or upper bound of the LBCI for one parameter}
\usage{
ci_bound_i(
  i = NULL,
  npar = NULL,
  sem_out = NULL,
  f_constr = NULL,
  which = NULL,
  history = FALSE,
  perturbation_factor = 0.9,
  lb_var = -Inf,
  wald_ci_start = TRUE,
  standardized = FALSE,
  opts = list(),
  ci_limit_ratio_tol = 1.5,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{i}{The position of the target parameters as in the parameter table of
lavaan as generated by \code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.}

\item{npar}{The number of free parameters, including those constrained to be
equal.}

\item{sem_out}{The fit object. Currently supports a
\link[lavaan:lavaan-class]{lavaan::lavaan} object only.}

\item{f_constr}{The constraint function generated by \code{\link[=set_constraint]{set_constraint()}}.}

\item{which}{Whether the lower bound or the upper bound is to be found. Must
be \code{"lbound"} or \code{"ubound"}.}

\item{history}{If \code{TRUE}, return the full optimization output as an
attribute. Default is \code{FALSE}.}

\item{perturbation_factor}{A number multiplied to the parameter
estimates in \code{sem_out}.
Using the parameter estimates as starting
values may lead to errors
in the first few iterations. Default is .90.
This argument is ignored is \code{wald_ci_start}
is `TRUE.}

\item{lb_var}{The lower bound for free parameters that are variances.
Default is \code{-Inf}. This is not an admissible
value but seems to be necessary when we need to find
the LBCI bound for a user-defined parameter.}

\item{wald_ci_start}{If \code{TRUE} and there are no equality constraints in
the model, Wald confidence limit will
be used as the starting value for the target parameter
if it is not a userd-defined paramter.}

\item{standardized}{If \code{TRUE}, the LBCI is for the requested estimate in the
standardized solution. Default is \code{FALSE}.}

\item{opts}{Options to be passed to \code{\link[nloptr:nloptr]{nloptr::nloptr()}}. Default is \code{list()}}

\item{ci_limit_ratio_tol}{The tolerance for the ratio of \code{a} to \code{b},
where \code{a} is
the distance between an LBCI limit and the
point estimate, and the \code{b} is the distance between the
original confidence limit (by default the Wald CI in
\code{\link[lavaan:lavaan]{lavaan::lavaan()}})
and the point estimate. If the ratio is larger than this value,
a warning is set in the status code.
Default is 1.5.}

\item{verbose}{If \code{TRUE}, the function will store more diagnostic information
in the attribute \code{diag}.
Default is \code{FALSE}.}

\item{...}{Optional arguments. Not used.}
}
\value{
A one-element numeric vector with the requested bound.

The attribute \code{diag} contains basic information in the optimization process.
If \code{verbose} is \code{TRUE}, more information is stored in this attribute.
}
\description{
Find the lower or upper bound of the likelihood-based
confidence interval (LBCI) for one parameter
}
\details{
\subsection{NOTE 1}{

This function is no longer the default function used by \code{\link[=semlbci]{semlbci()}}.
This function works, but has not been updated. The default and preferred
function is \code{\link[=ci_bound_nm_i]{ci_bound_nm_i()}}, which uses the approacy by Neale and Miller
(1997).
}

\subsection{NOTE 2}{

This function is not supposed to be used directly by users. It is
exported such that interested users can examine how a confidence bound is
found.
}

\subsection{Algorithm}{

This function currently supports \code{\link[lavaan:lavaan]{lavaan::lavaan()}} outputs only. This
function implements
the algorithm presented in Wu and Neale (2012; see also Pek & Wu, 2015,
Equation 12) that
estimates all free parameters in the optimization.
}

\subsection{Limitation(s)}{

This function not yet implements the method by Wu and Neale (2012)
for an estimate close to an attainable bound.
}
}
\examples{
data(simple_med)
dat <- simple_med
mod <-
"
m ~ x
y ~ m
"
fit_med <- lavaan::sem(mod, simple_med, fixed.x = FALSE)

fn_constr0 <- set_constraint(fit_med)

out1l <- ci_bound_i(1, 5, sem_out = fit_med,
                    f_constr = fn_constr0,
                    which = "lbound")
out1l

}
\references{
Pek, J., & Wu, H. (2015). Profile likelihood-based confidence intervals and
regions for structural equation models. \emph{Psychometrika, 80}(4), 1123–1145.
\url{https://doi.org/10.1007/s11336-015-9461-1}

Wu, H., & Neale, M. C. (2012). Adjusted confidence intervals for a bounded
parameter. \emph{Behavior Genetics, 42}(6), 886–898.
\url{https://doi.org/10.1007/s10519-012-9560-z}
}
\seealso{
\code{\link[=semlbci]{semlbci()}}, \code{\link[=ci_i]{ci_i()}}
}
