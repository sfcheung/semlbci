% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci_bound_wn_i.R, R/temp.R
\name{ci_bound_wn_i}
\alias{ci_bound_wn_i}
\title{Likelihood-based confidence bound for one parameter}
\usage{
ci_bound_wn_i(
  i = NULL,
  npar = NULL,
  sem_out = NULL,
  f_constr = NULL,
  which = NULL,
  history = FALSE,
  perturbation_factor = 0.9,
  lb_var = -Inf,
  wald_ci_start = TRUE,
  standardized = FALSE,
  opts = list(),
  ciperc = 0.95,
  ci_limit_ratio_tol = 1.5,
  verbose = FALSE,
  sf = 1,
  sf2 = 0,
  p_tol = 0.001,
  std_method = "lavaan",
  bounds = "none",
  ...
)

ci_bound_wn_i(
  i = NULL,
  npar = NULL,
  sem_out = NULL,
  f_constr = NULL,
  which = NULL,
  history = FALSE,
  perturbation_factor = 0.9,
  lb_var = -Inf,
  wald_ci_start = TRUE,
  standardized = FALSE,
  opts = list(),
  ciperc = 0.95,
  ci_limit_ratio_tol = 1.5,
  verbose = FALSE,
  sf = 1,
  sf2 = 0,
  p_tol = 0.001,
  std_method = "lavaan",
  bounds = "none",
  ...
)
}
\arguments{
\item{i}{The position of the target parameters as in the parameter
table of an lavaan object as generated by
\code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.}

\item{npar}{The number of free parameters, including those
constrained to be equal.}

\item{sem_out}{The fit object. Currently supports
\link[lavaan:lavaan-class]{lavaan::lavaan} objects only.}

\item{f_constr}{The constraint function generated by
\code{\link[=set_constraint]{set_constraint()}}.}

\item{which}{Whether the lower bound or the upper bound is to be
found. Must be \code{"lbound"} or \code{"ubound"}.}

\item{history}{If \code{TRUE}, return the full optimization output as an
attribute. Default is \code{FALSE}.}

\item{perturbation_factor}{A number multiplied to the parameter
estimates in \code{sem_out}. Using the parameter estimates as starting
values may lead to errors in the first few iterations. Default is
.90. This argument is ignored if \code{wald_ci_start} is `TRUE.}

\item{lb_var}{The lower bound for free parameters that are
variances. Default is \code{-Inf}. This is not an admissible value but
seems to be necessary when we need to find the LBCI bound for a
user-defined parameter.}

\item{wald_ci_start}{If \code{TRUE} and there are no equality
constraints in the model, and the target parameter is not a
user-defined parameter, the Wald confidence limit will be used as
the starting value.}

\item{standardized}{If \code{TRUE}, the LBCI is for the requested
estimate in the standardized solution. Default is \code{FALSE}.}

\item{opts}{Options to be passed to \code{\link[nloptr:nloptr]{nloptr::nloptr()}}. Default is
\code{list()}.}

\item{ciperc}{The proportion of coverage for the confidence
interval. Default is .95, and the limit for a 95\% confidence
interval will be sought.}

\item{ci_limit_ratio_tol}{The tolerance for the ratio of \code{a} to
\code{b}, where \code{a} is the distance between an LBCI limit and the point
estimate, and the \code{b} is the distance between the original
confidence limit (by default the Wald CI in \code{\link[lavaan:lavaan]{lavaan::lavaan()}})
and the point estimate. If the ratio is larger than this value, a
warning is set in the status code. Default is 1.5.}

\item{verbose}{If \code{TRUE}, the function will store more diagnostic
information in the attribute \code{diag}. Default is \code{FALSE}.}

\item{sf}{Scaling factor. Used for robust confidence limits.
Default is 1.}

\item{sf2}{The second scaling factor. Used for robust confidence limits.
Default is 0.}

\item{p_tol}{Tolerance for checking the achieved level of
confidence. If the absolute difference between the achieved level
and and \code{ciperc} is greater than this amount, a warning is set in
the status code and the bound is set to \code{NA}. Default is 1e-3.}

\item{std_method}{The method used to find the standardized solution.
If equal to \verb{"lavaan"``, [lavaan::standardizedSolution()] will be used. If equal to }"internal"\verb{, an internal function of this package will be used. The }"lavaan"\verb{method should work in all situations, but the}"internal"\verb{method can be faster. Default is}"lavaan"\verb{for now, but may be changed to}"internal"` if it is confirmed to work in all situations tested.}

\item{bounds}{Default is \code{""} and this function will set the lower bounds
to \code{lb_var} for variances. Other valid values are those
accepted by
\code{\link[lavaan:lavaan]{lavaan::lavaan()}}. If the fit object \code{sem_out} already
has bounds, this argument will be ignored and the existing
bounds will be used. This function is disabled for now and
this argument will be ignored.}

\item{...}{Optional arguments. Not used.}
}
\value{
A one-element numeric vector with the requested bound.

The attribute \code{diag} contains basic information in the optimization
process. If \code{verbose} is \code{TRUE}, more information is stored in this
attribute.

A one-element numeric vector with the requested bound.

The attribute \code{diag} contains basic information in the optimization
process. If \code{verbose} is \code{TRUE}, more information is stored in this
attribute.
}
\description{
Finds the lower or upper bound of the likelihood-based
confidence interval (LBCI) for one parameter

Finds the lower or upper bound of the likelihood-based
confidence interval (LBCI) for one parameter
}
\details{
\subsection{NOTE 1}{

This function is not supposed to be used directly by users. It is
exported such that interested users can examine how a confidence
bound is found.
}

\subsection{Algorithm}{

This function currently supports \code{\link[lavaan:lavaan]{lavaan::lavaan()}} outputs only.
This function implements the algorithm presented in Wu and Neale
(2012; see also Pek & Wu, 2015, Equation 12) that estimates all
free parameters in the optimization.
}

\subsection{Limitation(s)}{

This function not yet implements the method by Wu and Neale (2012)
for an estimate close to an attainable bound.
}

\subsection{NOTE 1}{

This function is not supposed to be used directly by users. It is
exported such that interested users can examine how a confidence
bound is found.
}

\subsection{Algorithm}{

This function currently supports \code{\link[lavaan:lavaan]{lavaan::lavaan()}} outputs only.
This function implements the algorithm presented in Wu and Neale
(2012; see also Pek & Wu, 2015, Equation 12) that estimates all
free parameters in the optimization.
}

\subsection{Limitation(s)}{

This function not yet implements the method by Wu and Neale (2012)
for an estimate close to an attainable bound.
}
}
\examples{

data(simple_med)
dat <- simple_med

mod <-
"
m ~ x
y ~ m
"

fit_med <- lavaan::sem(mod, simple_med, fixed.x = FALSE)

fn_constr0 <- set_constraint(fit_med)

out1l <- ci_bound_wn_i(1, 5, sem_out = fit_med, f_constr =
                    fn_constr0, which = "lbound")
out1l


data(simple_med)
dat <- simple_med

mod <-
"
m ~ x
y ~ m
"

fit_med <- lavaan::sem(mod, simple_med, fixed.x = FALSE)

fn_constr0 <- set_constraint(fit_med)

out1l <- ci_bound_wn_i(1, 5, sem_out = fit_med, f_constr =
                    fn_constr0, which = "lbound")
out1l

}
\references{
Pek, J., & Wu, H. (2015). Profile likelihood-based confidence
intervals and regions for structural equation models.
\emph{Psychometrika, 80}(4), 1123-1145.
\doi{10.1007/s11336-015-9461-1}

Wu, H., & Neale, M. C. (2012). Adjusted confidence intervals for a
bounded parameter. \emph{Behavior Genetics, 42}(6), 886-898.
\doi{10.1007/s10519-012-9560-z}

Pek, J., & Wu, H. (2015). Profile likelihood-based confidence
intervals and regions for structural equation models.
\emph{Psychometrika, 80}(4), 1123-1145.
\doi{10.1007/s11336-015-9461-1}

Wu, H., & Neale, M. C. (2012). Adjusted confidence intervals for a
bounded parameter. \emph{Behavior Genetics, 42}(6), 886-898.
\doi{10.1007/s10519-012-9560-z}
}
\seealso{
\code{\link[=semlbci]{semlbci()}}, \code{\link[=ci_i]{ci_i()}}

\code{\link[=semlbci]{semlbci()}}, \code{\link[=ci_i]{ci_i()}}
}
